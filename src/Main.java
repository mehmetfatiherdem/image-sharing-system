import helper.security.Authentication;
import helper.security.Confidentiality;
import model.Server;

import java.net.BindException;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) throws Exception {
      ApplicationManager.getInstance().run();

    /*
        Server server = Server.getInstance(1233);
        byte[] macKey = Authentication.generateMACKey();
        PublicKey serverPublicKey = Confidentiality.getPublicKeyFromByteArray(Confidentiality.getByteArrayFromPublicKey(server.getPublicKey()));
        byte[] encryptedMacKey = Confidentiality.encryptWithPublicKey(macKey, serverPublicKey);
        String macKeyString = "MAC" + " " + "Secretmsg123!" + Arrays.toString(encryptedMacKey);
        // mackey
        System.out.println("MAC key: " + Arrays.toString(macKey));
        System.out.println("Encrypted: " + Arrays.toString(encryptedMacKey));
        System.out.println("MAC generated by client: " + Arrays.toString(Authentication.generateMAC("Secretmsg123!".getBytes(), macKey)));

        byte[] decrypted = Confidentiality.decryptWithPrivateKey(encryptedMacKey, Confidentiality.getPrivateKeyFromByteArray(Confidentiality.getByteArrayFromPrivateKey(server.getKeyPair().getPrivate())));
        System.out.println("Decrypted: " + Arrays.toString(decrypted));
        System.out.println("MAC generated by server: " + Arrays.toString(Authentication.generateMAC("Secretmsg123!".getBytes(), macKey)));


     */

    }
}